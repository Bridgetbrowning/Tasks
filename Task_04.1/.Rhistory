library(adegenet)
library(hierfstat)
library (hierfstat)
library(poppr)
library(adegenet)
library(poppr)
library(dplyr)
library(hierfstat)
library(ggplot2)
library(RColorBrewer)
library(scales)
lobster <- read.csv("https://jonsmitchell.com/data/lobster_genotypes.csv")
lobster_wide <- reshape(lobster , idvar = c("ID", "Site"), timevar = "Locus", direction = "wide", sep = "")
colnames(lobster_wide) <- gsub("Genotype", "", colnames(lobster_wide))
snpgeno <- lobster_wide [ , 3:ncol(lobster_wide)]
snps_to_remove <- c("25580", "32362", "41521", "53889", "65376", "8953", "21197", "15531", "22740", "28357", "33066", "51507", "53263", "21880", "22323", "22365")
snpgeno <- snpgeno [ , !colnames(snpgeno) %in% snps_to_remove]
ind <- as.character(lobster_wide$ID)
site <- as.character(lobster_wide$Site)
lobster_gen <- df2genind(snpgeno, ploidy = 2, ind.names = ind, pop = site , sep = "")
lobster_gen <- missingno(lobster_gen , type = "geno", cutoff = 0.20)
mlg(lobster_gen)
dups_lobster <- mlg.id(lobster_gen)
lob_dups <- c()
x <- 1
for (i in dups_lobster){
if (length(dups_lobster [i]) > 1){
lob_dups[x] <- i
x <- x+1
}
}
lob_Nodups <- indNames(lobster_gen)[! indNames(lobster_gen) %in% lob_dups]
summary(lobster_gen$pop)
basic_lobster <- basic.stats(lobster_gen, diploid = TRUE)
Ho_lobster <- round(apply(basic_lobster$Ho, MARGIN = 2 , FUN = mean, na.rm = TRUE), digits=3)
basic_lobster <- basic.stats(lobster_gen, diploid = TRUE)
Ho_lobster <- round(apply(basic_lobster$Ho, MARGIN = 2 , FUN = mean, na.rm = TRUE), digits=3)
par(mar=c(4,4,1,1), las=1, mgp=c(2, 0.25, 0), tck=-0.005, cex.lab=1.25)
plot(He_lobster, Ho_lobster, xlab = "expected H", ylab="observed H", pch=21, bg="gray", xlim=c(0.32, 0.405), ylim=c(0.32, 0.405))
plot(He_lobster, Ho_lobster, xlab = "expected H", ylab= "observed H", pch=21, bg="gray", xlim=c(0.32, 0.405), ylim=c(0.32, 0.405))
savePlot(005_plot01.pdf)
basic_lobster <- basic.stats(lobster_gen, diploid = TRUE)
Ho_lobster <- round(apply(basic_lobster$Ho, MARGIN = 2 , FUN = mean, na.rm = TRUE), digits=3)
savePlot(005_plot01.pdf)
source("C:/Users/bdb00009/Desktop/Evolution/Tasks/Task_05/task_05/task_05.R")
savePlot(005_plot01.pdf)
par(mar=c(4,4,1,1), las=1, mgp=c(2, 0.25, 0), tck=-0.005,  cex.lab=1.25)
plot(He_lobster, Ho_lobster, xlab = "expected H", ylab= "observed H", pch=21, bg="gray", xlim=c(0.32, 0.405), ylim=c(0.32, 0.405))
abline(0,1,lty=3)
save.Plot(005_plot01.pdf)
abline(0,1,lty=3)
source("C:/Users/bdb00009/Desktop/Evolution/Tasks/Task_05/task_05/task_05.R")
library(adegenet)
install.packages(dplyr)
update.packages(R)
source("C:/Users/bdb00009/Desktop/Evolution/Tasks/Task_05/task_05/task_05.R")
setwd("C:\\Users\\bdb00009\\Desktop\\Evolution\\Tasks\\Task_05")
library(adegenet)
library(poppr)
library(dplyr)
library(hierfstat)
library(ggplot2)
library(RColorBrewer)
library(scales)
library(poppr)
lobster <- read.csv("https://jonsmitchell.com/data/lobster_genotypes.csv")
lobster_wide <- reshape(lobster , idvar = c("ID", "Site"), timevar = "Locus", direction = "wide", sep = "")
colnames(lobster_wide) <- gsub("Genotype", "", colnames(lobster_wide))
snpgeno <- lobster_wide [ , 3:ncol(lobster_wide)]
snps_to_remove <- c("25580", "32362", "41521", "53889", "65376", "8953", "21197", "15531", "22740", "28357", "33066", "51507", "53263", "21880", "22323", "22365")
snpgeno <- snpgeno [ , !colnames(snpgeno) %in% snps_to_remove]
ind <- as.character(lobster_wide$ID)
site <- as.character(lobster_wide$Site)
lobster_gen <- df2genind(snpgeno, ploidy = 2, ind.names = ind, pop = site , sep = "")
lobster_gen <- missingno(lobster_gen , type = "geno", cutoff = 0.20)
mlg(lobster_gen)
dups_lobster <- mlg.id(lobster_gen)
lob_dups <- c()
x <- 1
for (i in dups_lobster){
if (length(dups_lobster [i]) > 1){
lob_dups[x] <- i
x <- x+1
}
}
lob_Nodups <- indNames(lobster_gen)[! indNames(lobster_gen) %in% lob_dups]
summary(lobster_gen$pop)
basic_lobster <- basic.stats(lobster_gen, diploid = TRUE)
Ho_lobster <- round(apply(basic_lobster$Ho, MARGIN = 2 , FUN = mean, na.rm = TRUE), digits=3)
par(mar=c(4,4,1,1), las=1, mgp=c(2, 0.25, 0), tck=-0.005,  cex.lab=1.25)
plot(He_lobster, Ho_lobster, xlab = "expected H", ylab= "observed H", pch=21, bg="gray", xlim=c(0.32, 0.405), ylim=c(0.32, 0.405))
source("C:/Users/bdb00009/Desktop/Evolution/Tasks/Task_05/task_05/task_05.R")
He_lobster <- round(apply(basic_lobster$Ho, MARGIN = 2 , FUN = mean, na.rm = TRUE), digits=3)
setwd("C:\\Users\\bdb00009\\Desktop\\Evolution\\Tasks\\Task_05")
library(adegenet)
library(poppr)
library(dplyr)
library(hierfstat)
library(ggplot2)
library(RColorBrewer)
library(scales)
library(poppr)
lobster <- read.csv("https://jonsmitchell.com/data/lobster_genotypes.csv")
lobster_wide <- reshape(lobster , idvar = c("ID", "Site"), timevar = "Locus", direction = "wide", sep = "")
colnames(lobster_wide) <- gsub("Genotype", "", colnames(lobster_wide))
snpgeno <- lobster_wide [ , 3:ncol(lobster_wide)]
snps_to_remove <- c("25580", "32362", "41521", "53889", "65376", "8953", "21197", "15531", "22740", "28357", "33066", "51507", "53263", "21880", "22323", "22365")
snpgeno <- snpgeno [ , !colnames(snpgeno) %in% snps_to_remove]
ind <- as.character(lobster_wide$ID)
site <- as.character(lobster_wide$Site)
lobster_gen <- df2genind(snpgeno, ploidy = 2, ind.names = ind, pop = site , sep = "")
lobster_gen <- missingno(lobster_gen , type = "geno", cutoff = 0.20)
mlg(lobster_gen)
dups_lobster <- mlg.id(lobster_gen)
lob_dups <- c()
x <- 1
for (i in dups_lobster){
if (length(dups_lobster [i]) > 1){
lob_dups[x] <- i
x <- x+1
}
}
lob_Nodups <- indNames(lobster_gen)[! indNames(lobster_gen) %in% lob_dups]
summary(lobster_gen$pop)
basic_lobster <- basic.stats(lobster_gen, diploid = TRUE)
He_lobster <- round(apply(basic_lobster$Ho, MARGIN = 2 , FUN = mean, na.rm = TRUE), digits=3)
par(mar=c(4,4,1,1), las=1, mgp=c(2, 0.25, 0), tck=-0.005,  cex.lab=1.25)
plot(He_lobster, Ho_lobster, xlab = "expected H", ylab= "observed H", pch=21, bg="gray", xlim=c(0.32, 0.405), ylim=c(0.32, 0.405))
abline(0,1,lty=3)
saveplot(005_plot01.pdf)
savePlot()
saveplot(task_05 = 005_plot01.pdf)
save(005_plot01.pdf)
pdf("005_plot01.pdf")
abline(lm(Ho_lobster~He_lobster), lty=2, lwd=1.25, col='red')
pdf("005_plot01.pdf")
par(mar=c(4,4,1,1), las=1, mgp=c(2, 0.25, 0), tck=-0.005,  cex.lab=1.25)
plot(He_lobster, Ho_lobster, xlab = "expected H", ylab= "observed H", pch=21, bg="gray", xlim=c(0.32, 0.405), ylim=c(0.32, 0.405))
abline(0,1,lty=3)
abline(lm(Ho_lobster~He_lobster), lty=2, lwd=1.25, col='red')
dev.off()
dev.off()
dev.off()
dev.off()
pdf("005_plot01.pdf")
par(mar=c(4,4,1,1), las=1, mgp=c(2, 0.25, 0), tck=-0.005,  cex.lab=1.25)
plot(He_lobster, Ho_lobster, xlab = "expected H", ylab= "observed H", pch=21, bg="gray", xlim=c(0.32, 0.405), ylim=c(0.32, 0.405))
abline(0,1,lty=3)
abline(lm(Ho_lobster~He_lobster), lty=2, lwd=1.25, col='red')
par(mar=c(4,4,1,1), las=1, mgp=c(2, 0.25, 0), tck=-0.005,  cex.lab=1.25)
plot(He_lobster, Ho_lobster, xlab = "expected H", ylab= "observed H", pch=21, bg="gray", xlim=c(0.32, 0.405), ylim=c(0.32, 0.405))
abline(0,1,lty=3)
abline(lm(Ho_lobster~He_lobster), lty=2, lwd=1.25, col='red')
plot(He_lobster, Ho_lobster, xlab = "expected H", ylab= "observed H", pch=21, bg="gray", xlim=c(0.32, 0.405), ylim=c(0.32, 0.405))
dev.off()
dev.off()
plot(He_lobster, Ho_lobster, xlab = "expected H", ylab= "observed H", pch=21, bg="gray", xlim=c(0.32, 0.405), ylim=c(0.32, 0.405))
abline(0,1,lty=3)
abline(lm(Ho_lobster~He_lobster), lty=2, lwd=1.25, col='red')
source("C:/Users/bdb00009/Desktop/Evolution/Tasks/Task_05/task_05/task_05.R")
dev.off()
dev.off()
plot(He_lobster, Ho_lobster, xlab = "expected H", ylab= "observed H", pch=21, bg="gray", xlim=c(0.32, 0.405), ylim=c(0.32, 0.405))
abline(0,1,lty=3)
abline(lm(Ho_lobster~He_lobster), lty=2, lwd=1.25, col='red')
source("C:/Users/bdb00009/Desktop/Evolution/Tasks/Task_05/task_05/task_05.R")
Fis <- apply(basic_lobster$Fis, MARGIN = 2, FUN = mean, na.rm = TRUE)
lobster_gen_sub <- popsub(lobster_gen, sublist = c("Ale", "Ber", "Brd", "Pad", "Sar17", "Vig"))
lobster_fst <- genet.dist(lobster_gen_sub, method = )
lobster_fst <- genet.dist(lobster_gen_sub, method = "WC84") %>% round(digits = 3)
lab_order <- c("Ber", "Brd", "Pad", "Vig", "Sar17", "Ale")
source("C:/Users/bdb00009/Desktop/Evolution/Tasks/Task_05/task_05/task_05.R")
fst.mat <- as.matrix(lobster_fst)
fst.mat1 <- fst.mat[lab_order, ]
fst.mat2 <- fst.mat1[, lab_order]
ind <- which(upper.tri(fst.mat2), arr.ind = TRUE)
fst.df <- data.frame(Site1 = dimnames(fst.mat2)[[2]][ind[,2]], Site2 = dimnames(fst.mat2)[[1]][ind[,1]], Fst = fst.mat2[ ind ])
fst.df$Site1 <- factor(fst.df$Site1, levels = unique(fst.df$Site1))
fst.df$Site2 <- factor(fst.df$Site2, levels = unique(fst.df$Site2))
fst.df$Fst[fst.df$Fst < 0] <- 0
fst.label <- expression(italic("F")[ST])
mid <- max(fst.df$Fst) / 2
pdf("005_plot02.pdf")
ggplot(data = fst.df, aes(x= Site1, y = Site2, fill = Fst)) + geom_tile(colur = "black") + geom_text(aes(label = Fst), color= "black", size = 3) + scale_fill_gradient2 (low = "blue", mid = "pink", high= "red", midpoint = mid, name = fst.label, limits = c(0, max(fst.df$Fst)), breaks = c(0, 0.05, 0.10, 0.15)) + scale_x_discrete(expand = c(0,0)) + scale_y_discrete(expand = c(0,0), position = "right") + theme(axis.text = element_text(colour = "black", size = 10, face = "bold")), axis.title = element_blank(), panel.grid = element_blank(), panel.background = element_blank(), legend.position = "right", legend.title = element_text(size = 14, face = "bold"), legend.text = element_text(size =10))
ggplot(data = fst.df, aes(x= Site1, y = Site2, fill = Fst))+
geom_tile(colour = "black")+
geom_text(aes(label = Fst), color= "black", size = 3)+
scale_fill_gradient2(low = "blue", mid = "pink", high= "red",
midpoint = mid, name = fst.label, limits = c(0, max(fst.df$Fst)),
breaks = c(0, 0.05, 0.10, 0.15))+
scale_x_discrete(expand = c(0,0))+
scale_y_discrete(expand = c(0,0), position = "right")+
theme(axis.text = element_text(colour = "black", size = 10, face = "bold"),
axis.title = element_blank(),
panel.grid = element_blank(),
panel.background = element_blank(),
legend.position = "right",
legend.title = element_text(size = 14, face = "bold"),
legend.text = element_text(size =10)
)
dev.off()
dev.off()
dev.off()
ggplot(data = fst.df, aes(x= Site1, y = Site2, fill = Fst))+
geom_tile(colour = "black")+
geom_text(aes(label = Fst), color= "black", size = 3)+
scale_fill_gradient2(low = "blue", mid = "pink", high= "red",
midpoint = mid, name = fst.label, limits = c(0, max(fst.df$Fst)),
breaks = c(0, 0.05, 0.10, 0.15))+
scale_x_discrete(expand = c(0,0))+
scale_y_discrete(expand = c(0,0), position = "right")+
theme(axis.text = element_text(colour = "black", size = 10, face = "bold"),
axis.title = element_blank(),
panel.grid = element_blank(),
panel.background = element_blank(),
legend.position = "right",
legend.title = element_text(size = 14, face = "bold"),
legend.text = element_text(size =10)
)
source("C:/Users/bdb00009/Desktop/Evolution/Tasks/Task_05/task_05/task_05.R")
pdf("005_plot02.pdf")
ggplot(data = fst.df, aes(x= Site1, y = Site2, fill = Fst))+
geom_tile(colour = "black")+
geom_text(aes(label = Fst), color= "black", size = 3)+
scale_fill_gradient2(low = "blue", mid = "pink", high= "red",
midpoint = mid, name = fst.label, limits = c(0, max(fst.df$Fst)),
breaks = c(0, 0.05, 0.10, 0.15))+
scale_x_discrete(expand = c(0,0))+
scale_y_discrete(expand = c(0,0), position = "right")+
theme(axis.text = element_text(colour = "black", size = 10, face = "bold"),
axis.title = element_blank(),
panel.grid = element_blank(),
panel.background = element_blank(),
legend.position = "right",
legend.title = element_text(size = 14, face = "bold"),
legend.text = element_text(size =10)
)
dev.off()
pdf("005_plot01.pdf")
par(mar=c(4,4,1,1), las=1, mgp=c(2, 0.25, 0), tck=-0.005,  cex.lab=1.25)
plot(He_lobster, Ho_lobster, xlab = "expected H", ylab= "observed H", pch=21, bg="gray", xlim=c(0.32, 0.405), ylim=c(0.32, 0.405))
abline(0,1,lty=3)
abline(lm(Ho_lobster~He_lobster), lty=2, lwd=1.25, col='red')
dev.off()
source("C:/Users/bdb00009/Desktop/Evolution/Tasks/Task_05/task_05/task_05.R")
install.packages("learnPopGen")
pdf("coalescent.plot")
pdf("coalescent.pdf")
coalescent.plot()
library(learnPopGen)
library(learnPopGen)
pdf("coalescent.pdf")
coalescent.plot()
coalescent.plot()
coalescent.plot()
pdf("coalescent.pdf")
coalescent.plot()
pdf("coalescent.pdf")
coalescent.plot()
pdf("coalescent.pdf")
coalescent.plot()
source("C:/Users/bdb00009/Desktop/Evolution/Tasks/Task_05/task_05/task_05.R")
setwd("C:\\Users\\bdb00009\\Desktop\\Evolution\\Tasks\\Task_04.1")
setwd("C:\\Users\\bdb00009\\Desktop\\Evolution\\Tasks\\Task_04.1")
source("http://jonsmitchell.com/code/fxn05.R")
Pop1 <- simPop(Popsize = 50, nGenerations = 100, initial_p = 0.5, h = 1, s= 0)
plot(1:nrow(Pop1), Pop1[,1], ylim=c(0, 1), type = "l", xlab="generation", ylab="allele freq.", lwd=2)
lines(1:nrow(Pop1), Pop1[,2], lwd=2, col='red')
legend("topleft", legend = c("a", "b"), col =c("black", "red"), lwd=2, bty="n")
plotFit ( nruns = 10, n = 50, ngens = 100, init_p = 0.5, h = 1, s = 0)
Expectation <- c(10, 10, 10, 10)
Observed <- c(15, 15, 5, 5)
Observed <- c(5, 0, 0, 35)
Chisq <- sum( ( ( Expectation - Observed ) ^ 2) / Expectation )
barplot(rbind (Expectation , Observed), beside = T, main = bquote(chi^2 ~ "=" ~.(Chisq)), legend.text=c("expected", "observed"))
results <- read.csv("http://jonsmitchell.com/data/biol112labresults.csv", stringsAsFactors=F)
counts <- results [, c("yellow", "red", "green", "blue", "black", "tan")]
backgrounds <- c("White", "Red", "Yellow", "Green", "Blue", "Black")
backgroundCol <- c("white", "#d53e4f", "#fee08b", "#abdda4", "#3288bd", "black")
calcChi(counts [1 ,])
Chisqs <- apply(counts, 1, calcChi)
plotChis(counts)
Avg <- mean(Chisqs)
backgroundAvgs <- tapply(Chisqs, results [,3], mean)
propSig <- length( which( Chisqs > 11.70)) / length(Chisqs)
percSig <- round(100 * propSig)
par(las = 1, mar = c(4, 4, 1, 1), mgp = c(2, 0.5, 0), tck = -0.01, cex.axis=1)
hist(Chisqs, main="", xlab="chi-squared values", ylab="frequency")
dev.off()
par(las = 1, mar = c(4,4,1,1), mgp = c(2, 0.5, 0), tck = -0.01, cex.axis=1)
plot(1,1, xlim=c(0, 400), ylim=c(1, 8.5), xlab="", type="n", yaxt="n")
axis(2, at = 1:length(backgrounds), labels = backgrounds)
mtext(side=1, expression(Chi^2), cex=1.75, line=2.5)
counter <- 1
for (i in backgrounds) {
Data <- Chisqs[which(results [,3] == i)]
addHist(Y=counter, Dat=Data, Color=backgroundCol[counter])
counter <- counter + 1
}
abline( v = 11.70, lty = 2, lwd = 2, col= 'black')
Simulation <- simDraws(10000)
addHist(Y=7, Dat=Simulation, Color="lightgray")
abline(v = 11.70, lty=2, lwd=2)
Fit <- c(1,1,1,1,1,1)
names(Fit) <- 1:6
Simulation2 <- simDraws (1e4, w = Fit)
addHist(Y=8, Dat=Simulation2, Color=rgb(0,0,0,0.25))
Fit <- c(0.1, 1,1,1,1,1)
names(Fit) <- 1:6
Simulation3 <- simDraws(1e4, w= Fit)
addHist(Y=8, Dat=Simulation3, Color=rgb(0,0,0,0.25))
Fit <- c(0.5,0.6,0.7,1,1,1)
names(Fit) <- 1:6
Simulation4 <- simDraws(1e4, w = Fit)
addHist(Y=8, Dat=Simulation4 , Color=rgb(0,0,0,0.25))
Fit <- c(0.1, 0.2, 0.3, 0.4, 0.5, 1)
names(Fit) <- 1:6
Simulation5 <- simDraws(1e4, w = Fit)
addHist(Y=8, Dat=Simulation5 , Color=rgb(0,0,0,0.25))
Fit <- c(0.1, 0.1, 0.1, 0.1, 0.1, 1)
names(Fit) <- 1:6
Simulation6 <- simDraws(1e4, w= Fit)
addHist(Y=8, Dat=Simulation6, Color=rgb(0,0,0,0.25))
Simulation7 <- c(Simulation2, Simulation3, Simulation4, Simulation5, Simulation6)
addHist(Y=8, Dat=Simulation7, Color=rgb(0,0,1,0.25))
q()
