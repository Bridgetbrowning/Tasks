setwd("C:\\Users\\bdb00009\\Desktop\\Evolution\\Tasks\\Project")
Data1 <- read.csv(Muir DataFile Final)
Data1 <- read.csv(MuirDataFileFinal)
my_data <- read.csv(MuirDataFileFinal)
my_data <- read.csv("MuirDataFileFinal")
setwd("C:\\Users\\bdb00009\\Desktop\\Evolution\\Tasks\\Project")
data1 <- read.csv("MuirDataFileFinal")
data1 <- read.csv("Muir DataFile Final")
data1 <- read.csv("mydata100")
data1 <- read.csv("mydata100")
data1 <- read.csv("mydata100.csv")
data1 <- read.csv("mydata100.csv")
setwd("C:\\Users\\bdb00009\\Desktop\\Evolution\\Project")
data1 <- read.csv("mydata100.csv")
data1
setwd("C:\\Users\\bdb00009\\Desktop\\Evolution\\Tasks//Project")
setwd("C:\\Users\\bdb00009\\Desktop\\Evolution\\Tasks\\Project")
data1 <- read.csv("mydata100.csv")
data1
setwd("C:\\Users\\bdb00009\\Desktop\\Evolution\\Tasks\\Project")
data1 <- read.csv("mydata100.csv")
data1
setwd("C:\\Users\\bdb00009\\Desktop\\Evolution\\Tasks\\Task_06")
pdf("coalescent.pdf")
coalescent.plot()
library(learnPopGen)
pdf("coalescent.pdf")
coalescent.plot()
pdf("coalescent.pdf")
coalescent.plot()
pdf("coalescent.pdf")
coalescent.plot()
library(learnPopGen)
pdf("coalescent.pdf")
coalescent.plot()
pdf("coalescent.pdf")
coalescent.plot()
pdf("coalescent.pdf")
coalescent.plot()
library(learnPopGen)
pdf("coalescent.pdf")
coalescent.plot()
pdf("coalescent.pdf")
coalescent.plot()
pdf("coalescent.pdf")
coalescent.plot()
library(learnPopGen)
pdf("coalescent.pdf")
coalescent.plot()
pdf("coalescent.pdf")
coalescent.plot()
pdf("coalescent.pdf")
coalescent.plot()
Fis <- apply(basic_lobster$Fis, MARGIN = 2, FUN = mean, na.rm = TRUE)
Fis <- apply(basic_lobster$Fis, MARGIN = 2, FUN = mean, na.rm = TRUE)
setwd("C:\\Users\\bdb00009\\Desktop\\Evolution\\Tasks\\Task_06")
q()
setwd("C:\\Users\\bdb00009\\Desktop\\Evolution\\Tasks\\Task_06")
setwd("C:\\Users\\bdb00009\\Desktop\\Evolution\\Tasks\\Task_06")
setwd("C:\\Users\\bdb00009\\Desktop\\Evolution\\Tasks\\Task_06")
source("http://jonsmitchell.com/code/reformatData07.R")
source("http://jonsmitchell.com/code/simFxn.R")
plot(1, 1, type="n", xlim=c(1998, 2013), ylim=c(0, 1))
s <- apply(overallFreq, 2, function(x) lines(overallFreq [,1], x, col=rgb(0,0,0,0.01)))
rescaleFreq <- apply(overallFreq [,3:ncol(overallFreq)], 2, function(x)
x-x[1])
plot(1,1, type="n", xlim=c(1998, 2013), ylim=c(-0.25, 0.25))
s <- apply(rescaleFreq, 2, function(x) lines(overallFreq [,1], x, col=rgb(0,0,0,0.01)))
dYear <- c()
dAlleles <- c()
for (i in 3:ncol(overallFreq)) {
dYear <- c(dYear, overallFreq [,1])
Vec <- overallFreq [,i]
Init <- overallFreq [1,i]
dAlleles <- c(dAlleles, Vec - Init)
}
smoothScatter(dYear, dAlleles, colramp = Pal, nbin=100)
smoothScatter(dYear dAlleles, colramp = Pal, nbin=100, xlab="year",ylab="change in allele freq. since 1998")
smoothScatter(dYear, dAlleles, colramp = Pal, nbin=100, xlab="year",ylab="change in allele freq. since 1998")
addFit(nruns= 50, n = 100, ngen = 18, startT = 1997, simCol = "gray40", rescale = TRUE)
pdf("006_plot_nXhYsZ")
plot(alleleFreqs$d_freq, alleleFreqs$d_imm, xlim=c(-0.15, 0.15), xlab="overall freq. change", ylab="freq. change in subset")
points(alleleFreqs$d_freq, alleleFreqs$d_birth, col="blue")
points(alleleFreqs$d_freq, alleleFreqs$d_surv, col="red")
pdf("006_plot_nXhYsZ")
plot(alleleFreqs$d_freq, alleleFreqs$d_imm, xlim=c(-0.15, 0.15), xlab="overall freq. change", ylab="freq. change in subset")
points(alleleFreqs$d_freq, alleleFreqs$d_birth, col="blue")
points(alleleFreqs$d_freq, alleleFreqs$d_surv, col="red")
dev.off
