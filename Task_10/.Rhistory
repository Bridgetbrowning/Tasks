setwd("C:\\Users\\bdb00009\\Desktop\\Evolution\\Tasks\\Task_10")
setwd("C:\\Users\\bdb00009\\Desktop\\Evolution\\Tasks\\Task_10")
rnorm(100, mean = 0, sd =4)
x <- rnorm(100, mean = 0, sd=4)
rnorm(100, mean = 0, sd =(4))
rnorm(100, mean = 0, sd = sqrt(4))
x <- rnorm(100, mean = 0, sd= sqrt(4))
x <- rnorm(100, mean = 0, sd = sqrt(4))
y <- 5*x + 2 runif(100, min= 0, max = 0.1)
y <- 5*x + 2 + runif(100, min= 0, max = 0.1)
model <- lm(y ~ x)
slope <- coef(model)[2]
intercept <- coef(model)[1]
cat("Slope", slope, "\n")
cat("Y-intercept", intercept, "\n")
slopes <- c()
intercepts <- c()
random_nums <- c()
for(i in 1:100){}
x <- rnorm(100, mean = 0, sd = sqrt(4))
y <- 5*x + 2 + runif(100, min = 0, max = 0.1)
slopes[i] <- coef(model)[2]
intercepts[i] <- coef(model)[1]
x <- x * random_nums[i]
}
for(i in 1:100){
x <- rnorm(100, mean = 0, sd = sqrt(4))
y <- 5*x + 2 + runif(100, min = 0, max = 0.1)
slopes[i] <- coef(model)[2]
intercepts[i] <- coef(model)[1]
x <- x * random_nums[i]
}
for(i in 1:100){
x <- rnorm(100, mean = 0, sd = sqrt(4))
y <- 5*x + 2 + runif(100, min = 0, max = 0.1)
slopes[i] <- coef(model)[2]
intercepts[i] <- coef(model)[1]
x <- x * random_nums[i]
}
cat("Mean slope:", mean(slopes), "\n")
cat("Mean y-intercept:", mean(intercepts), "\n")
cat("Mean random number:", mean(random_nums), "\n")
setwd("C:\\Users\\bdb00009\\Desktop\\Evolution\\Tasks\\Task_10")
rnorm(100, mean = 0, sd = sqrt(4))
x <- rnorm(100, mean = 0, sd= sqrt(4))
x <- rnorm(100, mean = 0, sd = sqrt(4))
y <- 5*x + 2 + runif(100, min= 0, max = 0.1)
model <- lm(y ~ x)
slope <- coef(model)[2]
intercept <- coef(model)[1]
cat("Slope", slope, "\n")
cat("Y-intercept", intercept, "\n")
slopes <- c()
intercepts <- c()
random_nums <- c()
for(i in 1:100){
x <- rnorm(100, mean = 0, sd = sqrt(4))
y <- 5*x + 2 + runif(100, min = 0, max = 0.1)
slopes[i] <- coef(model)[2]
intercepts[i] <- coef(model)[1]
x <- x * random_nums[i]
}
cat("Mean slope:", mean(slopes), "\n")
cat("Mean y-intercept:", mean(intercepts), "\n")
cat("Mean random number:", mean(random_nums), "\n")
setwd("C:\\Users\\bdb00009\\Desktop\\Evolution\\Tasks\\Task_10")
install.packages("meme.memer")
install.packages("memery")
library(memery)
setwd("C:\\Users\\bdb00009\\Desktop\\Evolution\\Tasks\\Task_10")
#EC
install.packages("meme")
library(meme)
image <- "~/Desktop/evo meme image"
meme(image, "evo meme image", size=2) )
meme(image, "evo meme image", size=2)
image <- "~/Desktop/evo meme image.jpg"
meme(image, "evo meme image", size=2)
#EC
n <- 10000
prize <- sample(c("A", "B", "C"), size = n, replace = TRUE)
doorOpened <- ifelse(prize=="A", sample(c("B", "C"), size=n, replace=TRUE), ifelse(prize=="B","C", "B"))
doorUnopened <- ifelse(doorOpened=="B", "C", "B")
NotSwitchingWinChance <- sum(prize==doorUnopened)/n
?barplot
WinChance <- c(NotSwitchingWinChance, SwitchingWinChance)
SwitchingWinChance <- sum(prize==doorUnopened)/n
WinChance <- c(NotSwitchingWinChance, SwitchingWinChance)
pdf("plot10_ec01.pdf")
barplot(WinChance, names.arg=c("Not Switching Doors", "Switching Doors"), ylab="Chance of Winning", main="Monty Hall Odds of Winning Grand Prize", col="blue")
dev.off()
n <- 10000
prize <- sample(c("A", "B", "C"), size = n, replace = TRUE)
doorOpened <- ifelse(prize=="A", sample(c("B", "C"), size=n, replace=TRUE), ifelse(prize=="B","C", "B"))
doorUnopened <- ifelse(doorOpened=="B", "C", "B")
NotSwitchingWinChance <- sum(prize==doorUnopened)/n
SwitchingWinChance <- sum(prize==doorUnopened)/n
?barplot
pdf("plot10_ec01.pdf")
barplot(WinChance, names.arg=c("Not Switching Doors", "Switching Doors"), ylab="Chance of Winning", main="Monty Hall Odds of Winning Grand Prize", col="blue")
dev.off()
n <- 10000
prize <- sample(c("A", "B", "C"), size = n, replace = TRUE)
doorOpened <- ifelse(prize=="A", sample(c("B", "C"), size=n, replace=TRUE), ifelse(prize=="B","C", "B"))
doorUnopened <- ifelse(doorOpened=="B", "C", "B")
NotSwitchingWinChance <- sum(prize==doorUnopened)/n
SwitchingWinChance <- sum(prize==doorUnopened)/n
?barplot
pdf("plot10_ec01.pdf")
barplot(WinChance, names.arg=c("Not Switching Doors", "Switching Doors"), ylab="Chance of Winning", main="Monty Hall Odds of Winning Grand Prize", col="blue")
dev.off()
