library (swirl)
swirl ()
library (swirl)
swirl()
getwd()
1s()
1s()
1s ()
1s()
library (swirl)
1s()
ls()
swirl()
ls()
x <- 9
ls()
list.files()
?list.files
args()
args() list.files()
list.files()
args(list.files)
old.dir
args(old.dir)
getwd() <- Old.dir
getwd()
old.dir <- getwd()
dir.create()
dir.create(testdir)
testdir
getwd(testdir)
dir.create(old.dir)
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
list.files()
file.exists()
?list.files
file.exists()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R")
file.rename("mytest2.R")
file.rename()
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R")
file.path(folder1 and folder2)
file.path("folder1 and folder2")
file.path("folder1, folder2")
file.path("folder1" , "folder2")
?dir.create
dir.create("testdir2") file.path("testdir3")
dir.create("testdir2" , "testdir3")
dir.create(file.path("testdir2", "testdir3"), recursive = TRUE)
setwd()
setwd(old.dir)
1:20
pi:10
15:1
`:`
?`:`
seq(1,20)
seq(0,10, by=0.5)
my_seq <- seq(5,10, length=30)
lenght()
length()
length(30)
length(my_seq)
1:lenght(my_seq)
lenght(my_seq)
1: lenght(my_seq)
`:` length()
my_seq(1: length)
info()
skip()
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0,  1, 2), times = 10)
rep(c(0, 1, 2), each =10)
c(44,NA,5,NA) <- x
c(44, NA, 5, NA) <- x
c(44,NA,5,NA)
vector(44,NA,5,NA) <- x
vector(44, NA, 5, NA)
info()
c()
V = c(44, NA, 5, NA)
seq(44,NA,5,NA)
skip()
x*3
y <- rnorm(1000)
z <- rep(NA,1000)
my_data <- sample(c(y,z),100)
my_na <- is.na(my_data)
print(my_na)
my_na
my_data == NA
sum(my_na)
print(my_data)
my_data
0/0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
c(3rd,5th,& 7th)
x[c(3rd, 5th, & 7th)]
c(0)
[c(3,5,7)]
c(3,5,7)
x[c(3,5,7)]
(i.e. x[0])
x(i.e.x[0])
x(i.e. x[0])?
(i.e. x[0])?
skip()
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo =11, bar = 2, norf = NA)
vect
names()
names(vect)
c(11,2,NA)
names(vect2 c(11,2,NA))
skip(0)
infor()
info()
skip()
names(vect2) <- c("foo", "bar", "norf")
identical()
identical(vect and vect2)
identical(vect2)
skip()
2
3
vect["bar"]
vect[c("foo","bar")]
`1:20` <- my_vector
1:20 <- my_vector
skip()
my_vector <- 1:20
my_vector
dim(my_vector)?
skip()
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_vector <- my_matrix
my_matrix <- my_vector
`?`
?matrix
my_matrix2 <- matrix(my_matrix)
my_matrix2 <- matrix(1:20, 4, 5)
identical()
identical(my_matrix, my_matrix2)
vector("Bill", "Gina", "Kelly", and "Sean") <- patients
skip()
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_dataframe)
class()
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(cnames)
colnames(my_data) <- cnames
my_data
==
true==TRUE
TRUE = TRUE
TRUE=
TRUE
skip()
(FALSE == TRUE) == FALSE
6 == 7
6 < 7 ==
6 < 7 =
6<7
6<7
10<=10
5 != 7
5 = !7
5 != 7
!5==7
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
is.TRUE(6>4)
isTRUE(6>4)
identical("twins", "twins")
xor(5 == 6, !FALSE)
ints <- sample(10)
my_ints
ints
ints > 5
which(ints > 7)
any(ints < 0)
all(ints > 0)
Sys.Date()
mean(c(2,4,5))
submit()
boring_function("My first function!")
boring_function()
boring_function
my_mean <- function(my_vector)
my_mean
my_mean <- sum(c(1,2,3) / length c(1,2,3))
skip()
mean(my_vecto)
mean()
mean(c(4,5,10))
my_mean(c(4,5,10))
my_remainder(num, divisor)
my_remainder
remainder <- function(num, divisor)
remainder <- function(num, divisor)
==
skip()
remainder(5)
remainder(11,5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
skip()
evaluate(c(1.4,3.6,7.9,8.8))
evaluate(c(1.4, 3.6, 7.9, 8.8))
skip()
evaluate(function(x){x+1}, 6)
evaluate(c(8,4,0))
skip()
evaluate(function(x){x[1]}, c(8, 4, 0))
length(x)
skip()
?paste
paste("Programming", "is", "fun!")
skip()
telegram("START Good morning STOP")
submit()
skip()
mad_libs
mad_libs(today where, students took to the streets in protest of the new, being installed on campus)
mad_libs(place, adjective, and noun)
skip()
%p% <- function("Good" "Job")
skip()
!@# <- function("I", "love", "R!")
%p%
skip()
data(cars)
help(cars)
Runhead(cars)
head(cars)
plot(cars)
help(plot)
plot(x=cars$speed, y=cars$dist)
plot(x=cars$speed, y=cars$dist)
plot(x=cars$dist, y=cars$speed)
plot(x-axis "Speed")
plot(label x=Speed)
skip()
plot(x = cars$speed, y = cars$dist, ylab ="Stopping Distance")
skip()
plot(carsmain= "My Plot")
skip()
plot(cars, sub = "My Plot Subtitle")
plot(cars, col = 2, color(red))
skip()
plot(xlim = c(10,15))
skip()
plot(cars, pch =2)
date.frame(mtcars)
data.frame(mtcars)
data(mtcars)
help("boxplot")
?boxplot
boxplot(=mpg~cyl,=mtcars)
skip()
hist(c(mtcars$mpg))
hist(mtcars$mpg)
setwd("C:\\Users\\bdb00009\\Desktop\\Evolution\\Tasks\\Task_04")
source("http://jonsmitchell.com/code/fxn05.R")
Pop1 <- simPop(Popsize = 50, nGenerations = 100, initial_p = 0.5, h = 1, s= 0)
plot(1 :nrow(Pop1), Pop1 [,1], ylim=c(0,1), type = "1", xlab="generation", ylab="allele freq.", lwd=2)
plot(1:nrow(Pop1), Pop1[,1], ylim=c(0, 1), type = "l", xlab="generation", ylab="allele freq.", lwd=2)
lines(1:nrow(Pop1), Pop1[,2], lwd=2, col='red')
legend("topleft", legend = c("a", "b"))
legend("topleft", legend = c("a", "b"), col =c("black", "red"), lwd=2, bty="n")
plotFit ( nruns = 10, n = 50, ngens = 100, init_p = 0.5, h = 1, s = 0)
Expectation <- c(10, 10, 10, 10)
Observed <- c(15, 15, 5, 5)
Chisq <- sum( ( ( Expectation - Observed ) ^ 2) / Expectation )
barplot(rbind (Expectation , Observed), beside = T, main = bquote(chi^2 ~ "=" ~.(Chisq)), legend.text=c("expected", "observed"))
Observed <- c(5, 0, 0, 35)
results <- read.csv("http://jonsmitchell.com/data/biol112labresults.csv", stringsAsFactors=F)
counts <- results [, c("yellow", "red", "green", "blue", "black", "tan")]
backgrounds <- c("White", "Red", "Yellow", "Green", "Blue", "Black")
backgroundCol <- c("white", "#d53e4f", "#fee08b", "#abdda4", "#3288bd", "black")
calcChi(counts [1 ,])
Chisqs <- apply(counts, 1, calcChi)
plotChis(counts)
Avg <- mean(Chisqs)
backgroundAvgs <- tapply(Chisqs, results [,3], mean)
propSig <- length( which( Chisqs > 11.70)) / length(Chisqs)
percSig <- round(100 * propSig)
backgroundAvgs <- tapply(Chisqs, results [,3], mean)
propSig <- length( which( Chisqs > 11.70)) / length(Chisqs)
percSig <- round(100 * propSig)
par(las = 1, mar = c(4, 4, 1, 1), mgp = c(2, 0.5, 0), tck = -0.01, cex. axis=1)
par(las = 1, mar = c(4, 4, 1, 1), mgp = c(2, 0.5, 0), tck = -0.01, cex.axis=1)
hist(Chisqs, main="", xlab="chi-squared values", ylab="frequency")
dev.off()
par(las = 1, mar = c(4,4,1,1), mgp = c(2, 0.5, 0), tck = -0.01, cex.axis=1)
plot(1,1, xlim=c(0, 400))
plot(1,1, xlim=c(0, 400), ylim=c(1, 8.5), xlab="", type="n", yaxt="n")
axis(2, at = 1:length(backgrounds), labels = backgrounds)
mtext(side=1, expression(Chi^2), cex=1.75, line=2.5)
counter <- 1
for (i in backgrounds) {
Data <- Chisqs[which(results [,3] == i)]
addHist(Y=counter, Dat=Data, Color=backgroundCol[counter])
counter <- counter + 1
}
abline( v = 11.70, lty = 2, lwd = 2, col= 'black')
Simulation <- simDraws(10000)
addHist(Y=7, Dat=Simulaion, Color="lightgray")
addHist (Y=7, Dat=Simulaion, Color="lightgray")
addHist(Y=7, Dat=Simulation, Color="lightgray")
abline(v = 11.70, lty=2, lwd=2)
Fit <- c(1,1,1,1,1,1)
names(Fit) <- 1:6
Simulation2 <- simDraws (1e4, w = Fit)
addHist(Y=8, Dat=Simulation3, Color=rgb(0,0,0,0.25))
addHist(Y=8, Dat=Simulation2, Color=rgb(0,0,0,0.25))
Fit <- c(0.1, 1,1,1,1,1)
names(Fit) <- 1:6
Simulation3 <- simDraws(1e4, w= Fit)
addHist(Y=8, Dat=Simulation3, Color=rgb(0,0,0,0.25))
Fit <- c(0.5, 0.6, 0.7, 1, ,1, 1)
Fit <- c(0.5,0.6,0.7,1,1,1)
names(Fit) <- 1:6
addHist(Y=8, Dat=Simulation4, Color=rgb(0,0,0,0.25))
addHist(Y=8, Dat=Simulation4, Color=rgb(0,0,0,0.25))
addHist(Y=8, Dat=Simulation4, Color=rgb(0,0,0,0.25))
addHist (Y=8, Dat=Simulation4, Color=rgb(0,0,0,0.25))
Simulation4 <- simDraws(1e4, w = Fit)
addHist(Y=8, Dat=Simulation4 , Color=rgb(0,0,0,0.25))
Fit <- c(0.1, 0.2, 0.3, 0.4, 0.5, 1)
names(Fit) <- 1:6
Simulations5 <- simDraws(1e4, w = Fit)
addHist(Y=8, Dat=Simulation5 , Color=rgb(0,0,0,0.25))
addHist(Y=8, Dat=Simulation5, Color=rgb(0,0,0,0.25))
Simulations5 <- simDraws(1e4, w = Fit)
addHist(Y=8, Dat=Simulation5, Color=rgb(0,0,0,0.25))
Fit <- c(0.1, 0.2, 0.3, 0.4, 0.5, 1)
names(Fit) <- 1:6
Simulations5 <- simDraws(1e4, w = Fit)
addHist(Y=8, Dat=Simulation5, Color=rgb(0,0,0,0.25))
addHist(Y=8, Dat=Simulation5 , Color=rgb(0,0,0,0.25))
Fit <- c(0.1, 0.2, 0.3, 0.4, 0.5, 1)
names(Fit) <- 1:6
Simulation5 <- simDraws(1e4, w = Fit)
addHist(Y=8, Dat=Simulation5 , Color=rgb(0,0,0,0.25))
Fit <- c(0.1, 0.1, 0.1, 0.1, 0.1, 1)
names(Fit) <- 1:6
Simulation6 <- simDraws(1e4, w= Fit)
addHist(Y=8, Dat=Simulation6, Color=rgb(0,0,0,0.25))
Simlation7 <- c(Simulation2, Simulation3, Simulation4, Simulation5, Simulation6)
addHist(Y=8, Dat=Simulation7, Color=rgb(0,0,1,0.25))
Simulation7 <- c(Simulation2, Simulation3, Simulation4, Simulation5, Simulation6)
addHist(Y=8, Dat=Simulation7, Color=rgb(0,0,1,0.25))
q()
